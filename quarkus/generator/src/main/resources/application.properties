# Quarkus config
quarkus.ssl.native=true

# Configure the Kafka sink (we write to it)
mp.messaging.outgoing.generated-prices.connector=smallrye-kafka
mp.messaging.outgoing.generated-prices.topic=usd-prices
mp.messaging.outgoing.generated-prices.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configure the Kafka sources (we read from them)
mp.messaging.incoming.usd-prices.connector=smallrye-kafka
mp.messaging.incoming.usd-prices.topic=usd-prices
mp.messaging.incoming.usd-prices.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.incoming.eur-prices.connector=smallrye-kafka
mp.messaging.incoming.eur-prices.topic=eur-prices
mp.messaging.incoming.eur-prices.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

kafka.bootstrap.servers=${BOOTSTRAP_SERVER}

%dev.kafka.bootstrap.servers=${bootstrap.url}
%dev.kafka.security.protocol=SSL
%dev.mp.messaging.connector.smallrye-kafka.ssl.truststore.location=/tmp/client-truststore.jks
%dev.mp.messaging.connector.smallrye-kafka.ssl.truststore.password=kafka1
%dev.mp.messaging.connector.smallrye-kafka.ssl.keystore.location=/tmp/generator-keystore.jks
%dev.mp.messaging.connector.smallrye-kafka.ssl.keystore.password=kafka1
%dev.mp.messaging.connector.smallrye-kafka.ssl.key.password=${generator.pwd}

quarkus.ssl.native=true
quarkus.kubernetes-client.trust-certs=true

quarkus.openshift.route.expose=true
quarkus.openshift.env.vars.ab-jolokia-off=true
quarkus.openshift.env.configmaps=generator-client-config
