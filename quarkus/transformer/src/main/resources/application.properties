quarkus.http.port=8081
quarkus.kafka-streams.application-id=usd-eur-converter
quarkus.kafka-streams.topics=usd-prices,eur-prices

# streams options
kafka-streams.cache.max.bytes.buffering=10240
kafka-streams.commit.interval.ms=1000
kafka-streams.metadata.max.age.ms=500
kafka-streams.auto.offset.reset=earliest
kafka-streams.metrics.recording.level=DEBUG
kafka-streams.consumer.heartbeat.interval.ms=200

kafka.bootstrap.servers=${BOOTSTRAP_SERVER}
kafka.security.protocol=SASL_SSL

kafka.sasl.mechanism=OAUTHBEARER
kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.client.id="${CLIENT_ID}" \
  oauth.client.secret="${CLIENT_SECRET}" \
  oauth.token.endpoint.uri="${OAUTH_TOKEN_ENDPOINT_URI}" ;
kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

# Use sub-folder of embedded broker, so it gets cleaned by KafkaResource between re-runs
# This does not work for native tests, manually clean-up /tmp/kafka-streams/temperature-aggregator
%test.kafka-streams.state.dir=target/data/kafka-data/stores
%test.kafka.security.protocol=PLAINTEXT
%test.quarkus.kafka-streams.security.protocol=PLAINTEXT
%test.kafka.bootstrap.servers=localhost:9092
%test.quarkus.kafka-streams.bootstrap-servers=localhost:9092
%test.kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule
%test.quarkus.kafka-streams.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule
