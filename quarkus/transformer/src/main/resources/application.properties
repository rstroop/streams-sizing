quarkus.http.port=8081
quarkus.kafka-streams.application-id=prices-transformer
quarkus.kafka-streams.topics=usd-prices,eur-prices

# streams options
kafka-streams.cache.max.bytes.buffering=10240
kafka-streams.commit.interval.ms=1000
kafka-streams.metadata.max.age.ms=500
kafka-streams.auto.offset.reset=earliest
kafka-streams.metrics.recording.level=DEBUG
kafka-streams.consumer.heartbeat.interval.ms=200

kafka.bootstrap.servers=${BOOTSTRAP_SERVER}

%dev.kafka.bootstrap.servers=${bootstrap.url}
%dev.kafka.security.protocol=SSL
%dev.mp.messaging.connector.smallrye-kafka.ssl.truststore.location=/tmp/client-truststore.jks
%dev.mp.messaging.connector.smallrye-kafka.ssl.truststore.password=kafka1
%dev.mp.messaging.connector.smallrye-kafka.ssl.keystore.location=/tmp/transformer-keystore.jks
%dev.mp.messaging.connector.smallrye-kafka.ssl.keystore.password=kafka1
%dev.mp.messaging.connector.smallrye-kafka.ssl.key.password=${transformer.pwd}

quarkus.ssl.native=true
quarkus.kubernetes-client.trust-certs=true

quarkus.openshift.route.expose=true
quarkus.openshift.env.vars.ab-jolokia-off=true
quarkus.openshift.env.configmaps=transformer-client-config


# Use sub-folder of embedded broker, so it gets cleaned by KafkaResource between re-runs
# This does not work for native tests, manually clean-up /tmp/kafka-streams/temperature-aggregator
%test.kafka-streams.state.dir=target/data/kafka-data/stores
%test.kafka.security.protocol=PLAINTEXT
%test.quarkus.kafka-streams.security.protocol=PLAINTEXT
%test.kafka.bootstrap.servers=localhost:9092
%test.quarkus.kafka-streams.bootstrap-servers=localhost:9092
%test.kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule
%test.quarkus.kafka-streams.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule
